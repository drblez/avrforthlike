INCLUDE< device\m16def.f>
INCLUDE< format.f>
INCLUDE< cinout.f>
INCLUDE< locals.f>
INCLUDE" delay.f"
INCLUDE" beeper.f"
INCLUDE" i2cmaster.f"
INCLUDE" ds1307.f"
INCLUDE" key.f"
INCLUDE" eeprom.f"
INCLUDE" time.f"
INCLUDE" bcd.f"
INCLUDE" lcdinout.f"
INCLUDE< uart.f>

PSTRING" Trip computer~by Ruslan Stepanenko"	msg-helloPSTRING" Trip~STOP"				msg-stop-tripPSTRING" Trip~START"				msg-start-tripPSTRING" Date & time~"				msg-time-and-datePSTRING" Distance~"				msg-distancePSTRING" km"					msg-km PSTRING" Time in trip~"				msg-time-in-tripPSTRING" Time in go~"				msg-time-in-goPSTRING" kph"					msg-kphPSTRING" l"					msg-lPSTRING" lpk"					msg-lpkPSTRING" Speed~"				msg-speedPSTRING" Average speed~"			msg-average-speedPSTRING" Peak speed~"				msg-peak-speedPSTRING" Fuel on route~"			msg-fuel-on-routePSTRING" Average fuel~"				msg-average-fuelPSTRING" Reset trip?~+: Yes, -: No"		msg-reset-trip-titlePSTRING" Set date/time"				msg-set-time: INT-PORT	PORTD ; INLINE-FOREVER: INT-DDR	DDRD  ; INLINE-FOREVER
: INT-PIN	PIND  ; INLINE-FOREVER
: INT-FUEL	PD0   ; INLINE-FOREVER
: INT-SPEED	PD1   ; INLINE-FOREVER

8 ALLOCATE TIME

VARIABLE DISPLAY-DISABLE
VARIABLE NEED-SCR-CLEAR

DVARIABLE FUEL-CNT
DVARIABLE SPEED-CNT
DVARIABLE CUR-SPEED
DVARIABLE CUR-FUEL
QVARIABLE PARAMS-FUEL
QVARIABLE PARAMS-DISTANCE

( Trip parameters block begin )

VARIABLE STATE
QVARIABLE TIME-IN-TRIP
QVARIABLE TIME-IN-GO
QVARIABLE DISTANCE
QVARIABLE FUEL
DVARIABLE PEAK-SPEED
VARIABLE DISP-MODE
6 ALLOCATE ALARM
DVARIABLE SPEED-ALARM
QVARIABLE START-TIME
VARIABLE PARAM-END

( Trip parameters block end )

40 ALLOCATE LL

: PARAM-ADDR ( --> addr of first byte of parameters ) STATE ; INLINE
: PARAM-LEN  ( --> length of parameters ) PARAM-END STATE D- ; INLINE

: START-TRIP ( --> ) TRUE  STATE ! ; INLINE
: STOP-TRIP  ( --> ) FALSE STATE ! ; INLINE

: INT0-PROC  ( --> ) STATE @ 
  IF 
    FUEL Q@ 1Q Q+ FUEL Q! 
  THEN 
  FUEL-CNT D@ D1+ FUEL-CNT D! ; INTERRUPT INT0

: INT1-PROC  ( --> ) STATE @ 
  IF 
    DISTANCE Q@ 1Q Q+ DISTANCE Q! 
  THEN 
  SPEED-CNT D@ D1+ SPEED-CNT D! ; INTERRUPT INT1

: WRITE-TRIP-PARAMS-TO-EEPROM ( --> ) PARAM-ADDR 0. PARAM-LEN EEPROM-WRITE-BLOCK ;

: READ-TRIP-PARAMS-FROM-EEPROM  ( --> ) 0. PARAM-ADDR PARAM-LEN EEPROM-READ-BLOCK ;

: WRITE-TIME ( b --> ) S>D TIME D+ @ I2C-WRITE DROP ;
  
: SET-TIME ( --> )
  DS1307_A I2C-WRITE + I2C-START NOT IF PUT-BUSY-MSG THEN
  0 I2C-WRITE DROP
  2 WRITE-TIME 1 WRITE-TIME 0 WRITE-TIME 6 WRITE-TIME
  3 WRITE-TIME 4 WRITE-TIME 5 WRITE-TIME 7 WRITE-TIME
  I2C-STOP ;

: GET-TIME ( --> )
  DS1307_A I2C-WRITE-MODE + I2C-REP-START NOT IF PUT-BUSY-MSG THEN
  0 I2C-WRITE DROP
  DS1307_A I2C-READ-MODE + I2C-REP-START NOT IF PUT-BUSY-MSG THEN
  I2C-READ-ACK TIME 2. D+ !
  I2C-READ-ACK TIME 1. D+ !
  I2C-READ-ACK TIME 0. D+ !
  I2C-READ-ACK TIME 6. D+ !
  I2C-READ-ACK TIME 3. D+ !
  I2C-READ-ACK TIME 4. D+ !
  I2C-READ-ACK TIME 5. D+ !
  I2C-READ-NACK TIME 7. D+ !
;

: CONV-DIG TIME D+ @ 0 0 0 # # QDROP ;

: PUT-TIME-TO-SCR
  HEX 
  <#
    5. CONV-DIG C" / HOLD
    4. CONV-DIG C" / HOLD
    3. CONV-DIG BL   HOLD
    2. CONV-DIG C" : HOLD
    1. CONV-DIG C" : HOLD
    0. CONV-DIG 
    QDUP
  #> 
  DECIMAL
  TYPE ;
  
: TIMER1-ENABLE OCIE1A TIMSK SET-BIT ; INLINE

: TIMER0-INIT
  TCCR1B IN CS11 BV CS10 BV OR OR TCCR1B OUT
  $F424. OCR1AH OUT OCR1AL OUT
  0. TCNT1H OUT TCNT1L OUT ;

: RESET-TRIP-PARAMS
  STOP-TRIP
  0Q TIME-IN-TRIP Q!
  0Q TIME-IN-GO Q!
  0Q DISTANCE Q!
  0Q FUEL Q!
  0. PEAK-SPEED D! ;

QVARIABLE DISP-TEMP
  
: DISP-FIX-VALUE ( q --> ) DISP-TEMP Q! 10 2 DISP-TEMP Q@ Q>STR.F.R TYPE ;
  
: DISP-MODE-0
  msg-time-and-date PTYPE
  GET-TIME PUT-TIME-TO-SCR ;
  
: DISP-MODE-1
  msg-distance PTYPE
  DISTANCE Q@ 60Q Q/ DISP-FIX-VALUE
  msg-km PTYPE ;
  
: DISP-VALUE ( q c --> ) >R DISP-TEMP Q! R> DISP-TEMP Q@ Q>STR.R TYPE ;  

: DISP-TIME ( q --> ) SEC-TO-TIME 
  2 DISP-VALUE C" : EMIT
  2 DISP-VALUE C" : EMIT
  2 DISP-VALUE ;
  
: DISP-MODE-2 
  msg-time-in-trip PTYPE
  TIME-IN-TRIP Q@ DISP-TIME ;
  
: DISP-MODE-3 
  msg-time-in-go PTYPE
  TIME-IN-GO Q@ DISP-TIME ;
  
: DISP-MODE-4
  msg-speed PTYPE
  CUR-SPEED D@ D>Q DISP-FIX-VALUE
  msg-kph PTYPE ;

: DISP-AVERAGE-SPEED
  DISTANCE Q@ 6Q Q/ 
  TIME-IN-TRIP Q@ 3600Q Q* 10Q Q/
  Q/
  DISP-FIX-VALUE
  msg-kph PTYPE ;
  
: DISP-MODE-5
  msg-average-speed PTYPE
  TIME-IN-TRIP Q@ Q0>
  IF
    DISP-AVERAGE-SPEED
  THEN ;
  
: DISP-MODE-6
  msg-peak-speed PTYPE
  PEAK-SPEED D@ D>Q DISP-FIX-VALUE
  msg-kph PTYPE ;
  
: DISP-MODE-7
  msg-fuel-on-route PTYPE
  FUEL Q@ 160Q Q/ DISP-FIX-VALUE
  msg-l PTYPE ;
  
: DISP-AVERAGE-FUEL
  FUEL Q@ 16Q Q/
  DISTANCE Q@ 600Q Q/
  Q/
  msg-lpk PTYPE ;
  
: DISP-MODE-8
  msg-average-fuel PTYPE
  DISTANCE Q@ 600Q Q/ Q0>
  IF
    DISP-AVERAGE-FUEL
  THEN ;
  
: DISP-MODE-10
  msg-reset-trip-title PTYPE ;
  
:: DO-DISP
  (  0 ) DISP-MODE-0
  (  1 ) DISP-MODE-1
  (  2 ) DISP-MODE-2
  (  3 ) DISP-MODE-3
  (  4 ) DISP-MODE-4
  (  5 ) DISP-MODE-5
  (  6 ) DISP-MODE-6
  (  7 ) DISP-MODE-7
  (  8 ) DISP-MODE-8
  (  9 ) NOTHING
  ( 10 ) DISP-MODE-10
  ( 11 ) NOTHING
  ( 12 ) NOTHING
  ( 13 ) NOTHING
  ( 14 ) NOTHING
;

: SET-TRIP-PARAMS
  CUR-SPEED D@ PEAK-SPEED D@ D> IF CUR-SPEED D@ PEAK-SPEED D! THEN
  CUR-SPEED D@ 499. D> IF TIME-IN-GO Q@ 1Q Q+ TIME-IN-GO Q! THEN
  TIME-IN-TRIP Q@ 1Q Q+ TIME-IN-TRIP Q! ;
    
: TIMER1COMPA-PROC
  
  0. TCNT1H OUT TCNT1L OUT
  SPEED-CNT D@ CUR-SPEED D! 0. SPEED-CNT D!
  FUEL-CNT D@ CUR-FUEL D! 0. FUEL-CNT D!
  FUEL Q@ PARAMS-FUEL Q!
  DISTANCE Q@ PARAMS-DISTANCE Q!
  
  CUR-SPEED D@ 60. D* CUR-SPEED D!
  
  STATE @
  IF
    SET-TRIP-PARAMS
  THEN

  WRITE-TRIP-PARAMS-TO-EEPROM
  
  DISPLAY-DISABLE @ IF RETINT THEN

  NEED-SCR-CLEAR @ 
  IF 
    CLS FALSE NEED-SCR-CLEAR ! 
  ELSE
    0 0 GOTO-LINE-COL
  THEN

  DISP-MODE @ DO-DISP
  
; INTERRUPT TIMER1COMPA
  
: INC-DISP-MODE
    DISP-MODE @ 15 = IF 0 DISP-MODE ! ELSE DISP-MODE @ 1+ DISP-MODE ! THEN ;
    
: DEC-DISP-MODE
    DISP-MODE @ 0 = IF 15 DISP-MODE ! ELSE DISP-MODE @ 1- DISP-MODE ! THEN ;

( VARIABLE TIME-POS - LOCALS 0 )
( VARIABLE CHG      - LOCALS 1 )
    
: INC-TIME-POS
  TIME 0@ S>D D+ ( addr         )
  DUP @                ( addr value   )
  BCD-INC              ( addr value+1 )
  -ROT                 ( value+1 addr )
  ! 
  TRUE 1! ;

: DEC-TIME-POS
  TIME 0@ S>D D+ ( addr         )
  DUP @                ( addr value   )
  BCD-INC              ( addr value+1 )
  -ROT                 ( value+1 addr )
  ! 
  TRUE 1! ;

: SET-TIME-POS
  0@ 1+ 0!
  0@ 5 > IF 0 0! THEN ;
  
:: SET-TIME-DLG-SWITCH
  NOTHING
  INC-TIME-POS
  DEC-TIME-POS
  SET-TIME-POS
  NOTHING ;

: SET-TIME-DLG 
  2 LOCALS
  FALSE 1!
  TRUE DISPLAY-DISABLE @
  CLS
  GET-TIME
  msg-set-time PTYPE
  0 0!
  PUT-TIME-TO-SCR
  CURSOR-ON  
  BEGIN
    1@ IF
      1 0 GOTO-LINE-COL
      PUT-TIME-TO-SCR
      FALSE 1!
    THEN
    1 0@ 3 * GOTO-LINE-COL
    GET-KEY DUP SET-TIME-DLG-SWITCH
  KEY-4 = UNTIL
  CURSOR-OFF
  TRUE NEED-SCR-CLEAR !
  SET-TIME
  FALSE DISPLAY-DISABLE !
  DROP-LOCALS
;

: DO-SET-TIME SET-TIME-DLG ;

: DO-START-STOP
  TRUE DISPLAY-DISABLE ! 
  CLS
  STATE @ 
  IF 
    STOP-TRIP 
    msg-stop-trip PTYPE
  ELSE 
    START-TRIP 
    msg-start-trip PTYPE
  THEN 
  TRUE NEED-SCR-CLEAR !
  FALSE DISPLAY-DISABLE !
;

: DO-RESET-DATA ;

:: SWITCH-KEY-4
  DO-SET-TIME
  DO-START-STOP
  DO-START-STOP
  DO-START-STOP
  DO-START-STOP
  DO-START-STOP
  DO-START-STOP
  DO-START-STOP
  DO-START-STOP
  NOTHING
  DO-RESET-DATA
  NOTHING
  NOTHING
  NOTHING
  NOTHING
;

: DO-KEY-4 DISP-MODE @ SWITCH-KEY-4 ;
    
:: MAIN-LOOP-SWITCH 
  NOTHING
  INC-DISP-MODE 
  DEC-DISP-MODE 
  NOTHING 
  DO-KEY-4 ;
    
: MAIN-LOOP 
  FALSE DISPLAY-DISABLE !
  FALSE NEED-SCR-CLEAR !
  0. FUEL-CNT D!
  0. SPEED-CNT D!
  READ-TRIP-PARAMS-FROM-EEPROM
  SEI
  BEGIN
    KEY MAIN-LOOP-SWITCH
  FALSE UNTIL
;

: INT-INIT
  INT-DDR IN INT-FUEL BV INT-SPEED BV OR NOT AND INT-DDR OUT 
  ISC11 BV ISC10 BV ISC01 BV ISC00 BV OR OR OR MCUCR OUT
  INT0 BV INT1 BV OR GICR OUT ;

: INIT 
  msg-hello PTYPE
  250 BEEP-MS
  250 DELAY-MS
  1 DELAY-SEC
  CLS
  TIMER0-INIT
  INT-INIT
  MAIN-LOOP
; MAIN
